@{
    ViewBag.Title = "StaffBillVerification";
    Layout = "~/Views/Shared/_PHEDServeLayoutPage.cshtml";
}

@*<link href="~/Scripts/sweetalert2-master/dist/sweetalert.css" rel="stylesheet" />*@
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-sweetalert/1.0.1/sweetalert.min.css" rel="stylesheet" />


@*<script src="~/Scripts/sweetalert2-master/dist/sweetalert.js"></script>*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
<link type="text/css" href="https://insight.phed.com.ng/assets/css/themes/default/app.css" rel="stylesheet">

<div class="container-fluid">

    <div class="card">
        <div class="card-header">
            <h4 class="card-title">Staff Bill Verification</h4>
        </div>

        <div class="card-body"   id="VerifyPane">
            
            <div class="col-lg-12 ">
                <div class="panel registration-form">
                    <div class="panel-body">

                        <div class="row" style="margin-left:230px">


                            <div class="col-md-4">
                                <label>Staff AccountNo/MeterNo</label>
                                <input class="form-control" data-bind="value:AccountNo" />
                            </div>
                            <div class="col-md-4">
                                <label>AccountType</label>
                                <select class="form-control" data-bind="value:AccountType">
                                    <option>--Select Account Type--</option>
                                    <option>PREPAID</option>
                                    <option>POSTPAID</option>
                                </select>
                            </div>
                            @*<div class="col-md-2">.</div>*@
                            <div class="col-md-4" style="margin-top:25px">
                                <button type="button" class="btn btn-primary btn-labeled btn-labeled-right ml-10" data-bind="event:{click: VerifyAccount}"><b><i class="icon-search4"></i></b> Verify account</button>
                            </div>

                        </div>


                        <div id="StaffBillVerification" style="display:none">
                            <hr />
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Account Name</label>
                                        <input type="text" class="form-control" readonly="readonly" placeholder="First name" data-bind="value: ApplicationUser.AccountName,valueUpdate:'change'">

                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Account No</label>
                                        <input type="text" class="form-control" readonly="readonly" placeholder="Account No" data-bind="value: ApplicationUser.AccountNumber,valueUpdate:'change'">

                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Meter No</label>
                                        <input type="text" class="form-control" readonly="readonly" placeholder="Meter No" data-bind="value: ApplicationUser.MeterNo,valueUpdate:'change'">

                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Balance</label>
                                        <input type="text" class="form-control" readonly="readonly" placeholder="Balance" data-bind="value: ApplicationUser.Arrears,valueUpdate:'change'">

                                    </div>
                                </div>







                            </div>



                            <div class="row">

                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Is the Balance Correct?</label>
                                        <select class="form-control" data-bind="value: ApplicationUser.BillReflection,valueUpdate:'change'">
                                            <option>--Select Period--</option>
                                            <option>YES</option>
                                            <option>NO</option>
                                        </select>
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Meter Make</label>
                                        <input type="text" class="form-control" placeholder="Meter Make" data-bind="value: ApplicationUser.MeterMake,valueUpdate:'change'">

                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Period to Clear Debt</label>
                                        <select class="form-control" data-bind="value: ApplicationUser.PeriodToClearDebt,valueUpdate:'change'">
                                            <option>--Select Period--</option>

                                            <option>I AM NOT OWING</option>
                                            <option>1 Month</option>
                                            <option>2 Months</option>
                                            <option>3 Months</option>
                                            <option>4 Months</option>
                                            <option>5 Months</option>
                                            <option>6 Months</option>
                                            <option>7 Months</option>
                                            <option>8 Months</option>
                                            <option>9 Months</option>
                                            <option>10 Months</option>
                                            <option>11 Months</option>
                                            <option>12 Months</option>

                                        </select>

                                    </div>
                                </div>


                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Office Location</label>
                                        <input type="text" class="form-control" placeholder="Office Location" data-bind="value: ApplicationUser.OfficeLocation,valueUpdate:'change'">

                                    </div>
                                </div>

                            </div>


                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Address Name</label>
                                        <textarea class="form-control" cols="2" data-bind="value: ApplicationUser.Address,valueUpdate:'change'"></textarea>
                                        <div class="form-control-feedback" style="margin-top:-24px; padding-left:5px">
                                            <i class="icon-user-check text-muted"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Zone (Residential Account No)</label>
                                        <input type="email" class="form-control" readonly="readonly" placeholder="Zone" data-bind="value: ApplicationUser.Zone,valueUpdate:'change'">

                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Feeder(Residential Account No) </label>
                                        <input type="email" class="form-control" readonly="readonly" placeholder="Feeder" data-bind="value: ApplicationUser.Feeder,valueUpdate:'change'">
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Transformer Name </label>
                                        <input type="email" class="form-control" readonly="readonly" placeholder="Transformer Name" data-bind="value: ApplicationUser.DTR_Name,valueUpdate:'change'">
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>CIN </label>
                                        <input type="email" class="form-control" readonly="readonly" placeholder="Customer Identification Number" data-bind="value: ApplicationUser.CIN,valueUpdate:'change'">
                                    </div>
                                </div>
                            </div>

                            @*<div class="row">

                                <div class="col-md-6">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Last Amount Paid </label>
                                        <input type="email" class="form-control" readonly="readonly" placeholder="Last Amount Paid" data-bind="value: ApplicationUser.LastAmount,valueUpdate:'change'">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Last Date Paid </label>
                                        <input type="email" class="form-control" readonly="readonly" placeholder="Date Paid" data-bind="value: ApplicationUser.LastDatePaid,valueUpdate:'change'">
                                    </div>
                                </div>
                            </div>*@
                            <hr />
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>IBC Of Residence</label>
                                        <input type="email" class="form-control" readonly="readonly" placeholder="IBC" data-bind="value: ApplicationUser.IBC,valueUpdate:'change'">

                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>BSC of Residence</label>
                                        <input type="email" class="form-control" readonly="readonly" placeholder="BSC" data-bind="value: ApplicationUser.BSC,valueUpdate:'change'">

                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Job Role</label>
                                        <input type="email" class="form-control" placeholder="Job Role" data-bind="value: ApplicationUser.JobRole,valueUpdate:'change'">
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Resolved Balance</label>
                                        <input type="email" class="form-control" placeholder="Resolved Balance" data-bind="value: ApplicationUser.ResolvedBalance,valueUpdate:'change'">
                                    </div>
                                </div>
                            </div>

                            <div class="row">

                                <div class="col-md-6">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Staff Email</label>
                                        <input type="email" class="form-control" placeholder="Staff Email" data-bind="value: ApplicationUser.Email,valueUpdate:'change'">
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Staff Phone</label>
                                        <input type="email" class="form-control" placeholder="Staff Phone" data-bind="value: ApplicationUser.PhoneNo,valueUpdate:'change'">
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>Staff CUG Line</label>
                                        <input type="email" class="form-control" placeholder="CUG Line" data-bind="value: ApplicationUser.CUGLine,valueUpdate:'change'">
                                    </div>
                                </div> 
                            </div>

                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group has-feedback" style="margin-top:10px;">
                                        <label>StaffID</label>
                                        <input type="email" class="form-control" style="padding-left:2px" placeholder="StaffID" data-bind="value: ApplicationUser.StaffId,valueUpdate:'change'">
                                    </div>
                                </div>
                            </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group has-feedback" style="margin-top:10px;">
                                            <label>Do you have any Complaints or Remarks to Make?</label>
                                            <textarea class="form-control" cols="5" data-bind="value: ApplicationUser.Remarks,valueUpdate:'change'"></textarea>
                                            <div class="form-control-feedback" style="margin-top:-24px; padding-left:5px">
                                                <i class="icon-user-check text-muted"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <hr />

                                @*<input type="checkbox" style="float: left;"  class="custom-control-input ind-checkbox" title="SHA" />*@


                                <div class="custom-control custom-checkbox">
                                    <input type="checkbox" class="custom-control-input" id="customCheck1" data-bind="checked: IAgree">
                                    <label class="custom-control-label" for="customCheck1">THE INFORMATION I HAVE PROVIDED IS CORRECT TO THE BEST OF MY KNOWLEDGE. I PLEDGE THAT I DID NOT PROVIDE FALSE INFORMATION OR INFORMATION THAT IS DIVERGENT WITH THE TRUTH. I AGREE THAT I SHOULD BE PENALISED DULY IF IT IS DISCOVERED THAT THE INFORMATION PROVIDED IS WRONG OR MISLEADING.</label>
                                </div>


                                <h5><label for="vehicle1"> </label></h5>
                                <div class="text-right">
                                    <button type="button" class="btn btn-primary btn-labeled btn-labeled-right ml-10" data-bind="event:{click: StaffBillVerification}"><b><i class="icon-plus3"></i></b> Submit Account</button>
                                </div>
                            </div> 
                    </div>


                </div>
            </div>
             
        </div>


        <div class="card-body" id="DuplicatePane" style="display:none">
            <div class="col-lg-12 ">
                <div class="panel registration-form">

                    <div class="panel-body">

                        <div class="row">


                            <div class="col-md-12 text-center">
                                @*<img src="~/images/900.png" style="height:170px;width:170px" />
                                <img src="~/images/333.gif" />*@
                                 
                                <img src="~/images/info.png" style="height:100px;width:100px" />
                                @*<img src="~/images/90once.gif" />*@
                                <br />
                                <br />
                                <h3>You cannot Proceed Now! </h3>
                                <h4>
                                    You had made a submission of your Account details earlier. <br />
                                    Kindly contact the HCM department if you have relocated or <br />
                                    have changed your Account type. Thank you.
                                </h4>
                            </div>

                        </div>
                    </div>

                </div>

            </div>

        </div>

     
       
        <div class="card-body" id="SuccessPane" style="display:none">
            <div class="col-lg-12 ">
                <div class="panel registration-form">


                    <div class="panel-body">

                        <div class="row">





                            <div class="col-md-12 text-center">
                                @*<img src="~/images/900.png" style="height:170px;width:170px" />
                                <img src="~/images/333.gif" />*@
                                <img src="~/images/loaded.gif" style="height:150px;width:150px" />
                                @*<img src="~/images/90once.gif" />*@
                                <br />
                                <br />
                                <h3>Successful! </h3>
                                <h4>
                                    Your submission was successful. Thank you.
                                </h4>
                            </div>

                        </div>
                    </div>

                </div>

            </div>

        </div>



    </div>

    </div>
	


<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>

   @* <script type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>*@
    @*<script type="text/javascript" src="~/Scripts/knockout-3.4.0.debug.js"></script>*@
	
	<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.0/knockout-debug.js
"></script>
	



    @*<script type="text/javascript" src="~/Scripts/knockout-3.4.0.js"></script>*@
	
	<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.0/knockout-min.js"></script>
   @* <script type="text/javascript" src="~/Scripts/KnockOutMapping.js"></script>*@

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/knockout.mapping/2.4.1/knockout.mapping.min.js
"></script>

    @*<script type="text/javascript" src="~/Scripts/PHEDTribe.js"></script>*@
	
	<script type="text/javascript">
	function RegViewModel(data) {

    var self = this; 
    ko.mapping.fromJS(data, {}, this);

    self.isProcessing = ko.observable(true); self.IAgree = ko.observable(false);
    self.Password = ko.observable();
    self.ConfirmPassword = ko.observable();
    self.AccountNo = ko.observable();
    self.AccountType = ko.observable();
    self.SelectedBSC = ko.observable();
    self.SelectedIBC = ko.observable();
    self.SubmissionStatus = ko.observable();
    self.ReportStatus = ko.observable();
    self.FromNo = ko.observable();
    self.ToNo = ko.observable();

    self.ReportDate = ko.observable();
    self.message = ko.observable("There is no Data to display Now. Please select a criteria to view Data");




    self.ViewPHEDStaff = function (data) {

         
    }

    self.AddGangToList = function (data) {
         
    }


    self.fetchCustomerPaymentInfo = function () {

        dd("fetch data");
        dd(self.SelectedPaymentStatus());

        if (self.SelectedPaymentStatus() == null || self.SelectedPaymentStatus() == "" || self.SelectedPaymentStatus() == "undefined") {
            swal("Error", "Please select Payment Status to proceed", "info");
            return;
        }


        if (self.SelectedIBC() == null || self.SelectedIBC() == "" || self.SelectedIBC() == "undefined") {
            swal("Error", "Please select IBC Status to proceed", "info");

            return;
        }

        if (self.SelectedBSC() == null || self.SelectedBSC() == "" || self.SelectedBSC() == "undefined") {
            swal("Error", "Please select BSC Status to proceed", "info");
            return;
        }

        console.log("xsxsxsxsxsxs x xs xs xs xsx " + self.SelectedPaymentStatus().StatusName);


        var data = ko.mapping.toJS({
            BRCApprovalCSM: self.SelectedPaymentStatus().StatusName,
            IBC: self.SelectedIBC().IBCName,
            BSC: self.SelectedBSC().BSCName,
            MeterPhase: self.SelectedPhase.PhaseName
        });


        var ApprovalStatus = $("#HiddenStatus").val();
        dd(data);
        showloader();

        $.ajax({
            type: "POST",
            url: '/MAP/FetchCustomerDataForApproval',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({
                in_data: JSON.stringify(data),
                Status: ApprovalStatus
            }),
            success: function (result) {
                var data = JSON.parse(result);
                dd("count: " + data.PaymentList.length);
                dd(data.PaymentList);
                //self.PaymentList([676, 877]);
                ko.mapping.fromJS(data.PaymentList, {}, self.PaymentList);
                hideloader();
                //self.PaymentList(data.PaymentList);
                if (data.PaymentList.length < 1) {
                    dd("no data exist: " + data.PaymentList.length);
                    self.message("No Payment Exist in the Range");
                }
                else {
                    self.message("");
                    // ko.mapping.fromJS(data, {}, self);
                    //self.PaymentList(data.PaymentList);

                    // PaginateTable('customer_payment_info');
                    dd(data);
                }

            },
            error: function (err) {
                hideloader();
                self.message("The Request could not be Completed!");
                dd(err.responseText);
                //alert("Fail Details Request " + err.responseText)
                //self.isProcessing(false);
            }
        });
    }

  


    self.ViewPHEDStaff = function (data) {

        showloader();

        $.ajax({
            type: "POST",
            url: '/MAP/FetchPHEDStaff',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({
                in_data: JSON.stringify(data),
                Status: ApprovalStatus
            }),
            success: function (result) {
                var data = JSON.parse(result);
                dd("count: " + data.PaymentList.length);
                dd(data.PaymentList);
                //self.PaymentList([676, 877]);
                ko.mapping.fromJS(data.PaymentList, {}, self.PaymentList);
                hideloader();
                //self.PaymentList(data.PaymentList);
                if (data.PaymentList.length < 1) {
                    dd("no data exist: " + data.PaymentList.length);
                    self.message("No Payment Exist in the Range");
                }
                else {
                    self.message("");
                    // ko.mapping.fromJS(data, {}, self);
                    //self.PaymentList(data.PaymentList);

                    // PaginateTable('customer_payment_info');
                    dd(data);
                }

            },
            error: function (err) {
                hideloader();
                self.message("The Request could not be Completed!");
                dd(err.responseText);
                //alert("Fail Details Request " + err.responseText)
                //self.isProcessing(false);
            }
        });
    }
         
    self.UploadPHEDStaff = function (data)
    {
       // var Vendor = self.SelectedPaymentMode().Name;

        var files = $("#yourfileID").get(0).files;

         
        var ext = files[0].name.split('.').pop();

        console.log("dsdsd dsdsd ds ds " + ext);

        var n = files[0].size;

        if (n > 1500000) {
            swal('File Size Exceeded!', 'File size must not exceed 150kb, Please compress and try again.', 'info');
            return;
        }

        var m = parseFloat(n) / parseFloat(1024);
        // var Size = m.toFixed(2) + " KB";


        var FileType = ext;
        var DocumentTitle = ext; 
        data = new FormData();
        data.append("DocumentFile", files[0]);
        data.append("DocumentName", files[0].name);
        
         

       // data.append("MAPVendor", Vendor);
         
        showloader();

        $.ajax({
            type: "POST",
            url: '/MAP/UploadPHEDStaff',
            cache: false,
            contentType: false,
            processData: false,
            data: data,
            success: function (result) {
                hideloader();
                if (result.error != "") {
                    swal('File not Saved', result.error, 'error');
                    return;
                }

                var data = JSON.parse(result.result);

                ko.mapping.fromJS(data.UplodedStatusList, {}, self.UplodedStatusList);

                PaginateTable('customer_payment_info');
                swal('Record Saved!', 'Your entry has been successfully saved', 'success');
            },
            error: function (err) {
                hideloader();
                $('#pageloader-overlay').fadeOut(100);
                alert("Fail Details Request " + err.responseText)
                self.isProcessing(false);
            }
        });
    }






    self.GenerateBillPaymentList = function (form) {


        console.log("StaffID " + $("#PHEDStaffId").val());
        self.isProcessing(true);
       
         
        showloader();

        $.ajax({
            type: "POST",
            url: '/PHEDServe/GenerateBillPaymentList',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({

                'SubmissionStatus': self.SubmissionStatus(),
                'ReportStatus': self.ReportStatus(),
                'ReportDate': self.ReportDate(),
                'FromNo': self.FromNo(),
                'ToNo': self.ToNo()
                 
            }),
            success: function (result) {

                hideloader();
                if (result.result == "Customer Not Found") {

                    swal('Wrong Number!', 'It seems the AccountNo or Meter Number you Typed in is Wrong. Please type AccountNo for POSTPAID Accounts or MeterNo for PREPAID Accounts. Thank You.', 'error');
                    return;
                }
                
                var data = JSON.parse(result.result);
                 
                //swal('Record Seen!', 'The user data was Found', 'success');
                //ko.mapping.fromJS(data.ApplicationUser, {}, self.ApplicationUser);


                self.StaffBillPaymentDataList([]);
                console.log(JSON.stringify(data.StaffBillPaymentDataList));

                ko.mapping.fromJS(data.StaffBillPaymentDataList, {}, self.StaffBillPaymentDataList);
                self.isProcessing(false);


                PaginateTable('StaffPaymentList');

                
            },
            error: function (err) {
   hideloader();
                 swal('Something went wrong', 'It seems DL-Enhance is not reachable or your internet connection is Unstable. Please check and try again. Thank You.', 'error');
         

                console.log("Fail Details Request " + err.responseText)
                self.isProcessing(false);
            }
        });
    };

    self.DownloadStaffOnboardExcelTemplate = function (d) {

        var ReportViewers = "http://map.nepamsonline.com/Documents/PHEDStaffOnboard.xlsx";
        var url = ReportViewers;
        window.open(url, '_blank');
    }


    self.UploadStaffAndOnboard = function (d) {

       
        var files = $("#yourfileID").get(0).files;

        if (files[0] == null) {
            swal('select a File!', 'Please select a document to proceed.', 'info');
            return;
        }
         
        var ext = files[0].name.split('.').pop();

        var n = files[0].size;

        if (n > 1500000) {
            swal('File Size Exceeded!', 'File size must not exceed 150kb, Please compress and try again.', 'info');
            return;
        }

        var m = parseFloat(n) / parseFloat(1024);
        // var Size = m.toFixed(2) + " KB";
        var FileType = ext;
        var DocumentTitle = ext;

        data = new FormData();
        data.append("DocumentFile", files[0]);
        data.append("DocumentName", files[0].name);
        //data.append("StudentCode", self.StudentCode());


        
      


        //Upload the Files
        showloader();

        $.ajax({
            type: "POST",
            url: '/PHEDServe/UploadStaffAndOnboard',
            //contentType: "application/json; charset=utf-8",
            //dataType: "json",
            cache: false,
            contentType: false,
            processData: false,
            data: data,
            success: function (result) {

                if (result.error != "") {
                    swal('File not Saved', result.error, 'error');
                    return;
                }

                var data = JSON.parse(result.result);
                 
                ko.mapping.fromJS(data.UplodedStaffList, {}, self.UplodedStaffList);

                PaginateTable('customer_payment_info');
                swal('Record Saved!', 'Your entry has been successfully saved', 'success');
            },
            error: function (err) {
                $('#pageloader-overlay').fadeOut(100);
                alert("Fail Details Request " + err.responseText)
                self.isProcessing(false);
            }
        });

        ////




    }

    self.VerifyAccount = function (form) {


        console.log("StaffID " + $("#PHEDStaffId").val());
        self.isProcessing(true);
       


        //var InsertModifiedunmapped = ko.mapping.toJS(self.ApplicationUser);


        if (self.AccountNo() == "" || self.AccountNo() == null)
        {

            swal('Input a Number!', 'It seems the AccountNo or Meter Number you Typed in is Wrong. Please type AccountNo for POSTPAID Accounts or MeterNo for PREPAID Accounts. Thank You.', 'error');
            return;

        }

        showloader();

        $.ajax({
            type: "POST",
            url: '/PHEDServe/VerifyAccount',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({

                'AccountNo': self.AccountNo(),
                'AccountType': self.AccountType(),
                'staffId': $("#PHEDStaffId").val()
            }),
            success: function (result)
            {

                if (result.result == "Customer Not Found") { 
                    swal('Wrong Number!', 'It seems the AccountNo or Meter Number you Typed in is Wrong. Please type AccountNo for POSTPAID Accounts or MeterNo for PREPAID Accounts. Thank You.', 'error');
                    return;
                }


                if(result.error != "")
                {
                    hideloader();
                    $("#StaffBillVerification").slideUp();
                    $("#DuplicatePane").slideDown();
                    $("#VerifyPane").slideUp();
                    return;
                }
                
                var data = JSON.parse(result.result);
                  
                //swal('Record Seen!', 'The user data was Found', 'success');
                ko.mapping.fromJS(data.ApplicationUser, {}, self.ApplicationUser);
                self.isProcessing(false);

                $("#StaffBillVerification").slideDown(); 
                hideloader(); 
            },
            error: function (err) {
   hideloader();
                 swal('Something went wrong', 'It seems DL-Enhance is not reachable or your internet connection is Unstable. Please check and try again. Thank You.', 'error');
         

                console.log("Fail Details Request " + err.responseText)
                self.isProcessing(false);
            }
        });
    };



    self.register = function (form) {

        self.isProcessing(true);

        var InsertModifiedunmapped = ko.mapping.toJS(self.ApplicationUser);


        $.ajax({
            type: "POST",
            url: '/Account/AddNewUser',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({
                'userToBeAdded': JSON.stringify(InsertModifiedunmapped),
                'Password': self.Password()
            }),
            success: function (result) {


                var data = JSON.parse(result);
                swal('Record Saved!', 'The user has been registered successfully', 'success');

                self.isProcessing(false);
                window.location.href = "/Account/Login"

            },
            error: function (err) {

                alert("Fail Details Request " + err.responseText)
                self.isProcessing(false);
            }
        });
    };

    self.registerAdmin = function (form) {

        self.isProcessing(true);



        var InsertModifiedunmapped = ko.mapping.toJS(self.ApplicationUser);

        $.ajax({
            type: "POST",
            url: '/Account/AddNewUserAdmin',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({
                'userToBeAdded': JSON.stringify(InsertModifiedunmapped),
                'Password': self.Password()

            }),
            success: function (result) {


                var data = JSON.parse(result);
                swal('Record Saved!', 'The user has been registered successfully', 'success');

                self.isProcessing(false);
                //window.location.href = "/Account/Login"
                ko.mapping.fromJS(data.ApplicationUser, {}, self.ApplicationUser);
            },
            error: function (err) {

                alert("Fail Details Request " + err.responseText)
                self.isProcessing(false);
            }
        });
    };

    self.StaffBillVerification = function (form) {

        var CreatedBy = $("#StaffId").val();

        self.isProcessing(true);


        if (self.ApplicationUser.OfficeLocation() == null || self.ApplicationUser.OfficeLocation() == "") {

            swal('Office Location', 'Please type in your current Office Location to continue', 'info');
            return;
        }

        if (self.ApplicationUser.PhoneNo() == null || self.ApplicationUser.PhoneNo() == "") {

            swal('Phone No', 'Please type in your current PhoneNo to continue', 'info');
            return;
        }


        if (self.ApplicationUser.MeterMake() == null || self.ApplicationUser.MeterMake() == "") {

            swal('MeterType', 'Please type in your current MeterType to continue', 'info');
            return;
        }



        if (self.ApplicationUser.JobRole() == null || self.ApplicationUser.JobRole() == "") {

            swal('JobRole', 'Please type in your current JobRole to continue', 'info');
            return;
        }


        //if (self.ApplicationUser.Designation() == null || self.ApplicationUser.Designation() == "") {

        //    swal('Designation', 'Please type in your current Designation to continue', 'info');
        //    return;
        //}

        if (self.ApplicationUser.CUGLine() == null || self.ApplicationUser.CUGLine() == "") {

            swal('CUGLine', 'Please type in your current CUG Line to continue', 'info');
            return;
        }
        if (self.ApplicationUser.ResolvedBalance() == null || self.ApplicationUser.ResolvedBalance() == "") {

            swal('Resolved Balance', 'Please type in the resolved balance if you went for Bill Reconciliation, enter N/A if not applicable', 'info');
            return;
        }
        if (self.ApplicationUser.PeriodToClearDebt() == null || self.ApplicationUser.PeriodToClearDebt() == "" || self.ApplicationUser.PeriodToClearDebt() == "--Select Period--") {

            swal('Period to Clear Debt', 'Please select the period to Clear your Debt. If you are not owing, select I AM NOT OWING. Kindly note that this will be verified.', 'info');
            return;
        }
        if (self.IAgree() != true || !self.IAgree()) {

            swal('Agree to the Disclaimer', 'Please select the check box to agree to the disclaimer that the information you have supplied is correct and verifiable', 'info');
            return;
        }
        
        self.ApplicationUser.MeterType(self.AccountType());

        var InsertModifiedunmapped = ko.mapping.toJS(self.ApplicationUser);

        showloader();
        $.ajax({
            type: "POST",
            url: '/Account/StaffBillVerification',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({
                'userToBeAdded': JSON.stringify(InsertModifiedunmapped),
                'userID': CreatedBy
            }),
            success: function (result) {
                hideloader();
                var data = JSON.parse(result);
                //swal('Record Saved!', 'The Bill Verification Data has been Submitted successfully', 'success');
                self.isProcessing(false);
                ko.mapping.fromJS(data.ApplicationUser, {}, self.ApplicationUser);

                $("#VerifyPane").slideUp();
                $("#SuccessPane").slideDown();

            },
            error: function (err) {

                alert("Fail Details Request " + err.responseText)
                self.isProcessing(false);
            }
        });
    };
}


function Done() {
    var light_2 = $("#Holder");
    $(light_2).unblock();
}

function Busy() {
    var light_2 = $("#Holder");
    $(light_2).block({
        message: '<i class="icon-spinner2 spinner"></i>',
        overlayCSS: {
            backgroundColor: '#1B2024',
            opacity: 0.8,
            cursor: 'wait'
        },
        css: {
            border: 0,
            padding: 0,
            backgroundColor: 'none',
            color: '#fff'
        }
    });
}

function hideloader() {

    swal.close();
}
function showloader() {
    swal({
        title: "Loading...",
        text: "Please wait",
        imageUrl: 'http://phedpayments.nepamsonline.com/images/loader4.gif',

        showConfirmButton: false,
        allowOutsideClick: false
    });


};

function PaginateTable(TableName) {
    var table_id = '#' + TableName
    var data_table_object = {
        dom: 'Bfrtip',
        order: [[0, "asc"]],
        lengthMenu: [
            [5, 15, 30, -1],
            ['5 rows', '15 rows', '30 rows', 'Show all']
        ],
        buttons: [
            'pageLength', 'pdf', {
                text: 'Excel',
                extend: 'excelHtml5',
                exportOptions: {
                    columns: ':visible'
                }
            }, 'colvis'
        ]
    };
    if ($.fn.dataTable.isDataTable(table_id)) {
        //add the destroy key to the data_table_object
        data_table_object.destroy = true;

        //recreate Table
        $(table_id).DataTable(data_table_object);
    }
    else {
        $(table_id).DataTable(data_table_object);
    }

    $(".pagination").addClass('pagination-outline-success');
}

	
	</script>
	

    <script type="text/javascript">

    $(document).ready(function () {

        var RegVM;
        $.ajax({
            url: '/Account/loadRegisterModel',
            type: 'GET',
            dataType: 'JSON',
            success: function (result) {
                var data = JSON.parse(result);

                console.log("Data From Server " + JSON.stringify(data));
                RegVM = new RegViewModel(data);
                ko.applyBindings(RegVM);

                //$("#ContinentPage").DataTable({ responsive: true });
            },
            error: function (result) {
                //left for brevity

                alert("Failed" + result.responseText);
            }
        });


    });

    </script>
    <script>
        ko.bindingHandlers.stopBinding = {
            init: function () {
                return { controlsDescendantBindings: true };
            }
        };

        ko.virtualElements.allowedBindings.stopBinding = true;

    </script>
    <script>
        ko.bindingHandlers.date = {
            // https://disqus.com/home/discussion/jasonmitchellcom/binding_and_formatting_dates_using_knockout_and_moment_js/#comment-1374417079
            init: function (element, valueAccessor, allBindingsAccessor, viewModel) {
                ko.utils.registerEventHandler(element, 'change', function () {
                    var value = valueAccessor();
                    if (element.value !== null && element.value !== undefined && element.value.length > 0) {
                        value(element.value);
                    }
                    else {
                        value('');
                    }
                });
            },
            update: function (element, valueAccessor, allBindingsAccessor, viewModel) {
                var value = valueAccessor();
                var allBindings = allBindingsAccessor();
                var valueUnwrapped = ko.utils.unwrapObservable(value);

                // Date formats: http://momentjs.com/docs/#/displaying/format/
                var pattern = allBindings.format || 'DD/MM/YYYY';

                var output = "-";
                if (valueUnwrapped !== null && valueUnwrapped !== undefined && valueUnwrapped.length > 0) {
                    output = moment(valueUnwrapped).format(pattern);
                }

                if ($(element).is("input") === true) {
                    $(element).val(output);
                } else {
                    $(element).text(output);
                }
            }
        };
    </script>
